name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        include:
          - goos: windows
            extension: .exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install UPX
        run: sudo apt-get update && sudo apt-get install -y upx-ucl

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          go build -o dist/gits-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.extension || '' }} .
          if [[ "${{ matrix.goos }}" != "darwin" ]]; then
            upx dist/gits-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.extension || '' }}
          fi
          chmod +x dist/gits-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.extension || '' }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gits-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/gits-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.extension || '' }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare release files
        run: |
          mkdir -p release
          find dist -type f -name "gits-*" -exec cp {} release/ \;

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 